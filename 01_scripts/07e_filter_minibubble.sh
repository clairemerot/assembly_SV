#!/bin/bash
#SBATCH -J "filter_minibubble"
#SBATCH -o log_%j
#SBATCH -c 1 
#SBATCH -p small
#SBATCH --mail-type=ALL
#SBATCH --mail-user=claire.merot@gmail.com
#SBATCH --time=1-00:00
#SBATCH --mem=10G

# Important: Move to directory where job was submitted
cd $SLURM_SUBMIT_DIR


NB_CPU=1
module load bcftools/1.13

#temporary folder for intermediate files
VCF_FOLDER=07_minigraph/TMP_VCF
INPUT_VCF=07_minigraph/normal_chrsVSdwarf.vcf.gz # we will try not to modify this one - it was generated by calling snarls from the gfa graph with vg
INPUT_BED=07_minigraph/normal_chrsVSdwarf.SV.bed #generated by minigraph bubble
OUTPUT_VCF=07_minigraph/minibubble_filtered.vcf

mkdir $VCF_FOLDER
cp $INPUT_VCF $VCF_FOLDER/raw.vcf.gz
gunzip $VCF_FOLDER/raw.vcf.gz

#check what it looks like
#grep -v ^\#\# $VCF_FOLDER/raw.vcf | head 
#tail $VCF_FOLDER/raw.vcf 
#head $VCF_FOLDER/raw.vcf 
echo "total number of SVs"
grep -v ^\#\# $VCF_FOLDER/raw.vcf | wc -l  #135126

###some formatting
#reformat the header to keep only reference chromosomes
(grep ^"#" $VCF_FOLDER/raw.vcf  | grep -v ^\#\#"contig=<ID=scaf"| grep -v ^\#\#"contig=<ID=contig"; grep -v ^"#" $VCF_FOLDER/raw.vcf ) > $VCF_FOLDER/raw.reheader.vcf

#we need to add a field for SVLEN, SVTYPE, END
##step 1 export position 
bcftools query -f '%CHROM %POS %REF %ALT\n' $VCF_FOLDER/raw.reheader.vcf > $VCF_FOLDER/raw_info.txt
head $VCF_FOLDER/raw_info.txt

##step 2  Rscript to get relevant information
Rscript 01_scripts/Rscripts/extract_SV_info_minibubble.r "$VCF_FOLDER/raw_info.txt" "$INPUT_BED" "$VCF_FOLDER/raw_annot.txt"

bgzip $VCF_FOLDER/raw_annot.txt
tabix -s1 -b2 -e2 $VCF_FOLDER/raw_annot.txt.gz

##step3 prepare the header
echo -e '##INFO=<ID=SVLEN,Number=.,Type=Integer,Description="Difference in length between REF and ALT alleles">' > $VCF_FOLDER/raw_annot.hdr
echo -e '##INFO=<ID=SVTYPE,Number=1,Type=String,Description="Type of structural variant">' >> $VCF_FOLDER/raw_annot.hdr
echo -e '##INFO=<ID=END,Number=1,Type=Integer,Description="End position of the variant described in this record">' >> $VCF_FOLDER/raw_annot.hdr

##step4 run bcftools annotate
#-a is the annotation file (tabix and bgzip, it needs at least CHROM and POS, -h are the header lines to add, -c are the meaning of the column in the annotation file
bcftools annotate -a $VCF_FOLDER/raw_annot.txt.gz -h $VCF_FOLDER/raw_annot.hdr -c CHROM,POS,INFO/SVLEN,INFO/SVTYPE,INFO/END $VCF_FOLDER/raw.reheader.vcf > $VCF_FOLDER/raw.annotated.vcf
grep -v ^\#\# $VCF_FOLDER/raw.annotated.vcf | head  
grep -v ^\#\# $VCF_FOLDER/raw.annotated.vcf | wc -l #135126

###some filtering
#I am keeping the big ones
#all of them are above 50

#filter vcf -i (include, -O vcf format -o
#bcftools filter -i'INFO/SVLEN<=100000 && INFO/SVLEN>=-100000' -o $VCF_FOLDER/raw_100k.vcf -Ov $VCF_FOLDER/raw.annotated.vcf
#echo "total number of SVs < 100kb"
#grep -v ^\#\# $VCF_FOLDER/raw_100k.vcf | wc -l #135115

#bcftools filter -i'INFO/SVLEN<=-50 | INFO/SVLEN>=50' -o $VCF_FOLDER/raw_50.vcf -Ov $VCF_FOLDER/raw.annotated.vcf
#echo "total number of SVs >50bp"
#grep -v ^\#\# $VCF_FOLDER/raw_50.vcf | wc -l #120783

#Export sequences for advanced filtering
bcftools query -f '%CHROM %POS %INFO/END %INFO/SVTYPE %INFO/SVLEN %REF %ALT\n' $VCF_FOLDER/raw.annotated.vcf > $VCF_FOLDER/SV_data_with_seq.txt

#blacklist because of N string > 10 (possible junction of contigs )
grep -P "N{10,}" $VCF_FOLDER/SV_data_with_seq.txt | awk '{print $1 "\t" $2 "\t" $6 "\t" $7}' > $VCF_FOLDER/N10_blacklist.bed
echo "SVs excluded because of >10N" 
wc -l $VCF_FOLDER/N10_blacklist.bed

head $VCF_FOLDER/N10_blacklist.bed
bgzip -c $VCF_FOLDER/N10_blacklist.bed > $VCF_FOLDER/N10_blacklist.bed.gz
tabix -s1 -b2 -e2 $VCF_FOLDER/N10_blacklist.bed.gz

#remove blacklist of variants
bcftools view -T ^$VCF_FOLDER/N10_blacklist.bed.gz $VCF_FOLDER/raw.annotated.vcf > $VCF_FOLDER/raw_annotated_Nfiltered.vcf
echo "SVs after filtration for N seq" 
grep -v ^\#\# $VCF_FOLDER/raw_annotated_Nfiltered.vcf | wc -l #135077

#keep the filtered vcf
(grep ^"#" $VCF_FOLDER/raw_annotated_Nfiltered.vcf; grep -v ^"#" $VCF_FOLDER/raw_annotated_Nfiltered.vcf | sort -k1,1 -k2,2n) > $VCF_FOLDER/raw_annotated_Nfiltered.sorted.vcf
cp $VCF_FOLDER/raw_annotated_Nfiltered.sorted.vcf $OUTPUT_VCF
bgzip -c $OUTPUT_VCF > $OUTPUT_VCF.gz
tabix $OUTPUT_VCF.gz

#clean intermediate files
#rm -r $VCF_FOLDER


